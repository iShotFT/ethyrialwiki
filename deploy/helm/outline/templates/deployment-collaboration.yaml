{{- if .Values.services.collaboration }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "outline.fullname" . }}-collaboration
  labels:
    {{- include "outline.labels" . | nindent 4 }}
    app.kubernetes.io/component: collaboration
spec:
  replicas: {{ .Values.replicaCount.collaboration }}
  selector:
    matchLabels:
      {{- include "outline.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: collaboration
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "outline.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: collaboration
    spec:
      {{- if .Values.hostNetwork }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      dnsConfig:
        nameservers:
        - 10.152.183.10
        searches:
        - {{ .Release.Namespace }}.svc.cluster.local
        - svc.cluster.local
        - cluster.local
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "outline.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-collaboration
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["yarn", "start", "--services=collaboration"]
          ports:
            - name: collab
              containerPort: 3002
              protocol: TCP
          resources:
            {{- toYaml .Values.resources.collaboration | nindent 12 }}
          env:
          {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
          {{- end }}
          {{- if .Values.postgresql.enabled }}
            - name: DATABASE_URL
              value: postgres://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@outline-postgresql:5432/{{ .Values.postgresql.auth.database }}?sslmode=disable
          {{- end }}
          {{- if .Values.redis.enabled }}
            - name: REDIS_URL
              value: redis://outline-redis-master:6379
          {{- end }}
          {{- range .Values.extraEnv }}
            - name: {{ .name }}
              value: {{ .value | quote }}
          {{- end }}
          {{- include "outline.secretEnv" . | nindent 12 }}
          {{- with .Values.extraEnvFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }} 